                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
 0000                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 0000                   .dbfunc e port_init _port_init fV
                        .even
 0000           _port_init::
 0000                   .dbline -1
 0000                   .dbline 9
 0000           ; //ICC-AVR application builder : 4/18/2017 1:56:13 AM
 0000           ; // Target : M16
 0000           ; // Crystal: 1.0000Mhz
 0000           ; 
 0000           ; #include <iom16v.h>
 0000           ; #include <macros.h>
 0000           ; 
 0000           ; void port_init(void)
 0000           ; {
 0000                   .dbline 10
 0000           ;  PORTA = 0x00; // common cathode
 0000 2224              clr R2
 0002 2BBA              out 0x1b,R2
 0004                   .dbline 11
 0004           ;  DDRA  = 0xFF;
 0004 8FEF              ldi R24,255
 0006 8ABB              out 0x1a,R24
 0008                   .dbline 12
 0008           ;  PORTB = 0x00;
 0008 28BA              out 0x18,R2
 000A                   .dbline 13
 000A           ;  DDRB  = 0x00;
 000A 27BA              out 0x17,R2
 000C                   .dbline 14
 000C           ;  PORTC = 0xC0; //m103 output only
 000C 80EC              ldi R24,192
 000E 85BB              out 0x15,R24
 0010                   .dbline 15
 0010           ;  DDRC  = 0x3F;
 0010 8FE3              ldi R24,63
 0012 84BB              out 0x14,R24
 0014                   .dbline 16
 0014           ;  PORTD = 0x0C;
 0014 8CE0              ldi R24,12
 0016 82BB              out 0x12,R24
 0018                   .dbline 17
 0018           ;  DDRD  = 0x00;
 0018 21BA              out 0x11,R2
 001A                   .dbline -2
 001A           L1:
 001A                   .dbline 0 ; func end
 001A 0895              ret
 001C                   .dbend
 001C                   .dbfunc e timer0_init _timer0_init fV
                        .even
 001C           _timer0_init::
 001C                   .dbline -1
 001C                   .dbline 27
 001C           ; }
 001C           ; 
 001C           ; /********************************
 001C           ; // TIMER0 initialize - prescale:8
 001C           ; // WGM: Normal
 001C           ; // desired value: 1mSec
 001C           ; // actual value:  1.000mSec (0.0%)
 001C           ; *********************************/
 001C           ; void timer0_init(void)
 001C           ; {
 001C                   .dbline 28
 001C           ;  TCCR0 = 0x00;                                                         //stop
 001C 2224              clr R2
 001E 23BE              out 0x33,R2
 0020                   .dbline 29
 0020           ;  TCNT0 = 0x83;                                                         //set count
 0020 83E8              ldi R24,131
 0022 82BF              out 0x32,R24
 0024                   .dbline 30
 0024           ;  OCR0  = 0x7D;                                                 //set compare
 0024 8DE7              ldi R24,125
 0026 8CBF              out 0x3c,R24
 0028                   .dbline 31
 0028           ;  TCCR0 = 0x02;                                                         //start timer
 0028 82E0              ldi R24,2
 002A 83BF              out 0x33,R24
 002C                   .dbline -2
 002C           L2:
 002C                   .dbline 0 ; func end
 002C 0895              ret
 002E                   .dbend
 002E                   .dbfunc e init_devices _init_devices fV
                        .even
 002E           _init_devices::
 002E                   .dbline -1
 002E                   .dbline 36
 002E           ; }
 002E           ; 
 002E           ; //call this routine to initialize all peripherals
 002E           ; void init_devices(void)
 002E           ; {
 002E                   .dbline 38
 002E           ;  //stop errant interrupts until set up
 002E           ;  CLI(); //disable all interrupts
 002E F894              cli
 0030                   .dbline 39
 0030           ;  port_init();
 0030 E7DF              xcall _port_init
 0032                   .dbline 40
 0032           ;  timer0_init();
 0032 F4DF              xcall _timer0_init
 0034                   .dbline 42
 0034           ; 
 0034           ;  MCUCR = 0x00;
 0034 2224              clr R2
 0036 25BE              out 0x35,R2
 0038                   .dbline 43
 0038           ;  GICR  = 0x00;
 0038 2BBE              out 0x3b,R2
 003A                   .dbline 44
 003A           ;  TIMSK = 0x01; //timer interrupt sources
 003A 81E0              ldi R24,1
 003C 89BF              out 0x39,R24
 003E                   .dbline 45
 003E           ;  SEI(); //re-enable interrupts
 003E 7894              sei
 0040                   .dbline -2
 0040           L3:
 0040                   .dbline 0 ; func end
 0040 0895              ret
 0042                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 0000           _SEG_A_List::
 0000                   .blkb 2
                        .area idata
 0000 3F06              .byte 63,6
                        .area data(ram, con, rel)
 0002                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 0002                   .blkb 2
                        .area idata
 0002 5B4F              .byte 91,'O
                        .area data(ram, con, rel)
 0004                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 0004                   .blkb 2
                        .area idata
 0004 666D              .byte 'f,'m
                        .area data(ram, con, rel)
 0006                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 0006                   .blkb 2
                        .area idata
 0006 7D07              .byte 125,7
                        .area data(ram, con, rel)
 0008                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 0008                   .blkb 2
                        .area idata
 0008 7F6F              .byte 127,'o
                        .area data(ram, con, rel)
 000A                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 000A                   .blkb 2
                        .area idata
 000A 777C              .byte 'w,124
                        .area data(ram, con, rel)
 000C                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 000C                   .blkb 2
                        .area idata
 000C 395E              .byte 57,94
                        .area data(ram, con, rel)
 000E                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 000E                   .blkb 2
                        .area idata
 000E 7971              .byte 'y,'q
                        .area data(ram, con, rel)
 0010                   .dbfile C:\Users\IEUser\Documents\Clock\code\init_devices.h
 0010                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0010                   .dbsym e SEG_A_List _SEG_A_List A[16:16]c
 0010           _microSec::
 0010                   .blkb 2
                        .area idata
 0010 0000              .word 0
                        .area data(ram, con, rel)
 0012                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0012                   .dbsym e microSec _microSec i
 0012           _pos::
 0012                   .blkb 1
                        .area idata
 0012 00                .byte 0
                        .area data(ram, con, rel)
 0013                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0013                   .dbsym e pos _pos c
 0013           _counter_5ms::
 0013                   .blkb 1
                        .area idata
 0013 00                .byte 0
                        .area data(ram, con, rel)
 0014                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0014                   .dbsym e counter_5ms _counter_5ms c
 0014           _DP_flag::
 0014                   .blkb 1
                        .area idata
 0014 00                .byte 0
                        .area data(ram, con, rel)
 0015                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0015                   .dbsym e DP_flag _DP_flag c
 0015           _set_flag::
 0015                   .blkb 1
                        .area idata
 0015 00                .byte 0
                        .area data(ram, con, rel)
 0016                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0016                   .dbsym e set_flag _set_flag c
 0016           _keys_states::
 0016                   .blkb 1
                        .area idata
 0016 00                .byte 0
                        .area data(ram, con, rel)
 0017                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0017                   .dbsym e keys_states _keys_states c
 0017           _set_states::
 0017                   .blkb 1
                        .area idata
 0017 00                .byte 0
                        .area data(ram, con, rel)
 0018                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0018                   .dbsym e set_states _set_states c
                        .area text(rom, con, rel)
 0042                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0042                   .dbfunc e run_time _run_time fV
                        .even
 0042           _run_time::
 0042 4A93              st -y,R20
 0044 5A93              st -y,R21
 0046                   .dbline -1
 0046                   .dbline 27
 0046           ; #define digit_port PORTA
 0046           ; #define SEG_port PORTC
 0046           ; 
 0046           ; #define normal_mode   0
 0046           ; #define set_mode        1
 0046           ; 
 0046           ; const unsigned char SEG_A_List[16] = { 0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,
 0046           ; 0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71 };//"0-F" common cathode
 0046           ; 
 0046           ; unsigned char time[3];// 0 seconds 1 minutes 2 hours
 0046           ; unsigned char time_setter[3];
 0046           ; unsigned char disp_buff[6];
 0046           ; 
 0046           ; unsigned int microSec = 0; // Warning INT
 0046           ; 
 0046           ; unsigned char pos = 0;
 0046           ; unsigned char counter_5ms = 0;
 0046           ; 
 0046           ; unsigned char DP_flag = 0, //  0 is ON ,not 0 is OFF
 0046           ; set_flag = 0;//  0 is ON ,not 0 is OFF
 0046           ; 
 0046           ; unsigned char keys_states = 0, // 0 run time , 1 set time
 0046           ; set_states = 0;  // 0 set seconds,1 set mins, 2 set hours
 0046           ; 
 0046           ; 
 0046           ; void run_time(void)
 0046           ; {
 0046                   .dbline 28
 0046           ;       if (++microSec % 250 == 0) set_flag = ~set_flag;
 0046 80911000          lds R24,_microSec
 004A 90911100          lds R25,_microSec+1
 004E 0196              adiw R24,1
 0050 1C01              movw R2,R24
 0052 30921100          sts _microSec+1,R3
 0056 20921000          sts _microSec,R2
 005A 2AEF              ldi R18,250
 005C 30E0              ldi R19,0
 005E 8C01              movw R16,R24
 0060 0E940000          xcall mod16u
 0064 0030              cpi R16,0
 0066 0107              cpc R16,R17
 0068 29F4              brne L5
 006A           X0:
 006A                   .dbline 28
 006A 20901500          lds R2,_set_flag
 006E 2094              com R2
 0070 20921500          sts _set_flag,R2
 0074           L5:
 0074                   .dbline 29
 0074           ;       if (microSec >= 1000) {
 0074 80911000          lds R24,_microSec
 0078 90911100          lds R25,_microSec+1
 007C 883E              cpi R24,232
 007E E3E0              ldi R30,3
 0080 9E07              cpc R25,R30
 0082 40F1              brlo L7
 0084           X1:
 0084                   .dbline 29
 0084                   .dbline 30
 0084           ;               microSec = 0;
 0084 2224              clr R2
 0086 3324              clr R3
 0088 30921100          sts _microSec+1,R3
 008C 20921000          sts _microSec,R2
 0090                   .dbline 31
 0090           ;               DP_flag = ~DP_flag;
 0090 20901400          lds R2,_DP_flag
 0094 2094              com R2
 0096 20921400          sts _DP_flag,R2
 009A                   .dbline 32
 009A           ;               if (++time[0] >= 60) {
 009A 80910900          lds R24,_time
 009E 8F5F              subi R24,255    ; addi 1
 00A0 282E              mov R2,R24
 00A2 20920900          sts _time,R2
 00A6 8C33              cpi R24,60
 00A8 A8F0              brlo L9
 00AA           X2:
 00AA                   .dbline 32
 00AA                   .dbline 33
 00AA           ;                       time[0] = 0;
 00AA 2224              clr R2
 00AC 20920900          sts _time,R2
 00B0                   .dbline 34
 00B0           ;                       if (++time[1] >= 60) {
 00B0 40910A00          lds R20,_time+1
 00B4 4F5F              subi R20,255    ; addi 1
 00B6 40930A00          sts _time+1,R20
 00BA 4C33              cpi R20,60
 00BC 58F0              brlo L11
 00BE           X3:
 00BE                   .dbline 34
 00BE                   .dbline 35
 00BE           ;                               time[1] = 0;
 00BE 20920A00          sts _time+1,R2
 00C2                   .dbline 36
 00C2           ;                               if (++time[2] >= 24) {
 00C2 40910B00          lds R20,_time+2
 00C6 4F5F              subi R20,255    ; addi 1
 00C8 40930B00          sts _time+2,R20
 00CC 4831              cpi R20,24
 00CE 10F0              brlo L15
 00D0           X4:
 00D0                   .dbline 36
 00D0                   .dbline 37
 00D0           ;                                       time[2] = 0;
 00D0 20920B00          sts _time+2,R2
 00D4                   .dbline 38
 00D4           ;                               }
 00D4           L15:
 00D4                   .dbline 39
 00D4           ;                       }
 00D4           L11:
 00D4                   .dbline 40
 00D4           ;               }
 00D4           L9:
 00D4                   .dbline 41
 00D4           ;       }
 00D4           L7:
 00D4                   .dbline -2
 00D4           L4:
 00D4                   .dbline 0 ; func end
 00D4 5991              ld R21,y+
 00D6 4991              ld R20,y+
 00D8 0895              ret
 00DA                   .dbend
 00DA                   .dbfunc e Get_time _Get_time fV
                        .even
 00DA           _Get_time::
 00DA                   .dbline -1
 00DA                   .dbline 45
 00DA           ; }
 00DA           ; 
 00DA           ; void Get_time(void)
 00DA           ; {
 00DA                   .dbline 46
 00DA           ;       time_setter[2] = time[2];
 00DA 20900B00          lds R2,_time+2
 00DE 20920800          sts _time_setter+2,R2
 00E2                   .dbline 47
 00E2           ;       time_setter[1] = time[1];
 00E2 20900A00          lds R2,_time+1
 00E6 20920700          sts _time_setter+1,R2
 00EA                   .dbline 48
 00EA           ;       time_setter[0] = time[0];
 00EA 20900900          lds R2,_time
 00EE 20920600          sts _time_setter,R2
 00F2                   .dbline -2
 00F2           L19:
 00F2                   .dbline 0 ; func end
 00F2 0895              ret
 00F4                   .dbend
 00F4                   .dbfunc e Add_time _Add_time fV
                        .even
 00F4           _Add_time::
 00F4                   .dbline -1
 00F4                   .dbline 52
 00F4           ; }
 00F4           ; 
 00F4           ; void Add_time(void)
 00F4           ; {
 00F4                   .dbline 53
 00F4           ;       switch(set_states)
 00F4 00911700          lds R16,_set_states
 00F8 1127              clr R17
 00FA 0030              cpi R16,0
 00FC 0107              cpc R16,R17
 00FE 49F0              breq L28
 0100           X5:
 0100 0130              cpi R16,1
 0102 E0E0              ldi R30,0
 0104 1E07              cpc R17,R30
 0106 29F0              breq L28
 0108           X6:
 0108 0230              cpi R16,2
 010A E0E0              ldi R30,0
 010C 1E07              cpc R17,R30
 010E C1F0              breq L31
 0110           X7:
 0110 2BC0              xjmp L25
 0112           L28:
 0112                   .dbline 57
 0112           ;       {
 0112           ;        case 0:
 0112           ;        case 1:
 0112           ;                 if(++time_setter[set_states]>=60)time_setter[set_states]=0;break;
 0112 80E0              ldi R24,<_time_setter
 0114 90E0              ldi R25,>_time_setter
 0116 20901700          lds R2,_set_states
 011A 3324              clr R3
 011C 280E              add R2,R24
 011E 391E              adc R3,R25
 0120 F101              movw R30,R2
 0122 8081              ldd R24,z+0
 0124 8F5F              subi R24,255    ; addi 1
 0126 8083              std z+0,R24
 0128 8C33              cpi R24,60
 012A F0F0              brlo L26
 012C           X8:
 012C                   .dbline 57
 012C 80E0              ldi R24,<_time_setter
 012E 90E0              ldi R25,>_time_setter
 0130 E0911700          lds R30,_set_states
 0134 FF27              clr R31
 0136 E80F              add R30,R24
 0138 F91F              adc R31,R25
 013A 2224              clr R2
 013C 2082              std z+0,R2
 013E                   .dbline 57
 013E 14C0              xjmp L26
 0140           L31:
 0140                   .dbline 59
 0140           ;        case 2:
 0140           ;                 if(++time_setter[set_states]>=24)time_setter[set_states]=0;break;
 0140 80E0              ldi R24,<_time_setter
 0142 90E0              ldi R25,>_time_setter
 0144 20911700          lds R18,_set_states
 0148 3327              clr R19
 014A 280F              add R18,R24
 014C 391F              adc R19,R25
 014E F901              movw R30,R18
 0150 0081              ldd R16,z+0
 0152 0F5F              subi R16,255    ; addi 1
 0154 0083              std z+0,R16
 0156 0831              cpi R16,24
 0158 38F0              brlo L26
 015A           X9:
 015A                   .dbline 59
 015A E0911700          lds R30,_set_states
 015E FF27              clr R31
 0160 E80F              add R30,R24
 0162 F91F              adc R31,R25
 0164 2224              clr R2
 0166 2082              std z+0,R2
 0168                   .dbline 59
 0168           L25:
 0168           L26:
 0168                   .dbline -2
 0168           L24:
 0168                   .dbline 0 ; func end
 0168 0895              ret
 016A                   .dbend
 016A                   .dbfunc e Sub_time _Sub_time fV
                        .even
 016A           _Sub_time::
 016A                   .dbline -1
 016A                   .dbline 65
 016A           ;       }
 016A           ;       
 016A           ; }
 016A           ; 
 016A           ; void Sub_time(void)
 016A           ; {
 016A                   .dbline 66
 016A           ;       switch(set_states)
 016A 00911700          lds R16,_set_states
 016E 1127              clr R17
 0170 0030              cpi R16,0
 0172 0107              cpc R16,R17
 0174 49F0              breq L38
 0176           X10:
 0176 0130              cpi R16,1
 0178 E0E0              ldi R30,0
 017A 1E07              cpc R17,R30
 017C 29F0              breq L38
 017E           X11:
 017E 0230              cpi R16,2
 0180 E0E0              ldi R30,0
 0182 1E07              cpc R17,R30
 0184 C9F0              breq L41
 0186           X12:
 0186 2CC0              xjmp L35
 0188           L38:
 0188                   .dbline 70
 0188           ;       {
 0188           ;        case 0:
 0188           ;        case 1:
 0188           ;                 if(--time_setter[set_states] == 255)time_setter[set_states]=59;break;
 0188 80E0              ldi R24,<_time_setter
 018A 90E0              ldi R25,>_time_setter
 018C 20901700          lds R2,_set_states
 0190 3324              clr R3
 0192 280E              add R2,R24
 0194 391E              adc R3,R25
 0196 F101              movw R30,R2
 0198 8081              ldd R24,z+0
 019A 8150              subi R24,1
 019C 482E              mov R4,R24
 019E 4082              std z+0,R4
 01A0 8F3F              cpi R24,255
 01A2 F1F4              brne L36
 01A4           X13:
 01A4                   .dbline 70
 01A4 80E0              ldi R24,<_time_setter
 01A6 90E0              ldi R25,>_time_setter
 01A8 E0911700          lds R30,_set_states
 01AC FF27              clr R31
 01AE E80F              add R30,R24
 01B0 F91F              adc R31,R25
 01B2 8BE3              ldi R24,59
 01B4 8083              std z+0,R24
 01B6                   .dbline 70
 01B6 14C0              xjmp L36
 01B8           L41:
 01B8                   .dbline 72
 01B8           ;        case 2:
 01B8           ;                 if(--time_setter[set_states] == 255)time_setter[set_states]=23;break;
 01B8 80E0              ldi R24,<_time_setter
 01BA 90E0              ldi R25,>_time_setter
 01BC 20911700          lds R18,_set_states
 01C0 3327              clr R19
 01C2 280F              add R18,R24
 01C4 391F              adc R19,R25
 01C6 F901              movw R30,R18
 01C8 0081              ldd R16,z+0
 01CA 0150              subi R16,1
 01CC 0083              std z+0,R16
 01CE 0F3F              cpi R16,255
 01D0 39F4              brne L36
 01D2           X14:
 01D2                   .dbline 72
 01D2 E0911700          lds R30,_set_states
 01D6 FF27              clr R31
 01D8 E80F              add R30,R24
 01DA F91F              adc R31,R25
 01DC 87E1              ldi R24,23
 01DE 8083              std z+0,R24
 01E0                   .dbline 72
 01E0           L35:
 01E0           L36:
 01E0                   .dbline -2
 01E0           L34:
 01E0                   .dbline 0 ; func end
 01E0 0895              ret
 01E2                   .dbend
 01E2                   .dbfunc e quick_Sub_time _quick_Sub_time fV
                        .even
 01E2           _quick_Sub_time::
 01E2                   .dbline -1
 01E2                   .dbline 77
 01E2           ;       }
 01E2           ; }
 01E2           ; 
 01E2           ; void quick_Sub_time(void)
 01E2           ; {
 01E2                   .dbline 78
 01E2           ;    switch(set_states)
 01E2 00911700          lds R16,_set_states
 01E6 1127              clr R17
 01E8 0030              cpi R16,0
 01EA 0107              cpc R16,R17
 01EC 49F0              breq L48
 01EE           X15:
 01EE 0130              cpi R16,1
 01F0 E0E0              ldi R30,0
 01F2 1E07              cpc R17,R30
 01F4 29F0              breq L48
 01F6           X16:
 01F6 0230              cpi R16,2
 01F8 E0E0              ldi R30,0
 01FA 1E07              cpc R17,R30
 01FC 19F1              breq L51
 01FE           X17:
 01FE 42C0              xjmp L45
 0200           L48:
 0200                   .dbline 82
 0200           ;       {
 0200           ;        case 0:
 0200           ;        case 1:
 0200           ;                 time_setter[set_states] -=10;
 0200 80E0              ldi R24,<_time_setter
 0202 90E0              ldi R25,>_time_setter
 0204 20901700          lds R2,_set_states
 0208 3324              clr R3
 020A 280E              add R2,R24
 020C 391E              adc R3,R25
 020E F101              movw R30,R2
 0210 8081              ldd R24,z+0
 0212 8A50              subi R24,10
 0214 8083              std z+0,R24
 0216                   .dbline 83
 0216           ;                 if(time_setter[set_states] >= 245)time_setter[set_states]-=196;break;
 0216 80E0              ldi R24,<_time_setter
 0218 90E0              ldi R25,>_time_setter
 021A E0911700          lds R30,_set_states
 021E FF27              clr R31
 0220 E80F              add R30,R24
 0222 F91F              adc R31,R25
 0224 8081              ldd R24,z+0
 0226 853F              cpi R24,245
 0228 08F4              brsh X20
 022A 2CC0              xjmp L46
 022C           X20:
 022C           X18:
 022C                   .dbline 83
 022C 80E0              ldi R24,<_time_setter
 022E 90E0              ldi R25,>_time_setter
 0230 20901700          lds R2,_set_states
 0234 3324              clr R3
 0236 280E              add R2,R24
 0238 391E              adc R3,R25
 023A F101              movw R30,R2
 023C 8081              ldd R24,z+0
 023E 845C              subi R24,196
 0240 8083              std z+0,R24
 0242                   .dbline 83
 0242 20C0              xjmp L46
 0244           L51:
 0244                   .dbline 85
 0244           ;        case 2:
 0244           ;                 time_setter[set_states] -=3;
 0244 80E0              ldi R24,<_time_setter
 0246 90E0              ldi R25,>_time_setter
 0248 00911700          lds R16,_set_states
 024C 1127              clr R17
 024E 080F              add R16,R24
 0250 191F              adc R17,R25
 0252 F801              movw R30,R16
 0254 8081              ldd R24,z+0
 0256 8350              subi R24,3
 0258 8083              std z+0,R24
 025A                   .dbline 86
 025A           ;                 if(time_setter[set_states] >= 252)time_setter[set_states]-=232;break;
 025A 80E0              ldi R24,<_time_setter
 025C 90E0              ldi R25,>_time_setter
 025E E0911700          lds R30,_set_states
 0262 FF27              clr R31
 0264 E80F              add R30,R24
 0266 F91F              adc R31,R25
 0268 8081              ldd R24,z+0
 026A 8C3F              cpi R24,252
 026C 58F0              brlo L46
 026E           X19:
 026E                   .dbline 86
 026E 80E0              ldi R24,<_time_setter
 0270 90E0              ldi R25,>_time_setter
 0272 00911700          lds R16,_set_states
 0276 1127              clr R17
 0278 080F              add R16,R24
 027A 191F              adc R17,R25
 027C F801              movw R30,R16
 027E 8081              ldd R24,z+0
 0280 885E              subi R24,232
 0282 8083              std z+0,R24
 0284                   .dbline 86
 0284           L45:
 0284           L46:
 0284                   .dbline -2
 0284           L44:
 0284                   .dbline 0 ; func end
 0284 0895              ret
 0286                   .dbend
 0286                   .dbfunc e Set_time _Set_time fV
                        .even
 0286           _Set_time::
 0286                   .dbline -1
 0286                   .dbline 91
 0286           ;       }
 0286           ; }
 0286           ; 
 0286           ; void Set_time(void)
 0286           ; {
 0286                   .dbline 92
 0286           ;       time[2] = time_setter[2];
 0286 20900800          lds R2,_time_setter+2
 028A 20920B00          sts _time+2,R2
 028E                   .dbline 93
 028E           ;       time[1] = time_setter[1];
 028E 20900700          lds R2,_time_setter+1
 0292 20920A00          sts _time+1,R2
 0296                   .dbline 94
 0296           ;       time[0] = time_setter[0];
 0296 20900600          lds R2,_time_setter
 029A 20920900          sts _time,R2
 029E                   .dbline -2
 029E           L54:
 029E                   .dbline 0 ; func end
 029E 0895              ret
 02A0                   .dbend
 02A0                   .dbfunc e time_to_dispbuff _time_to_dispbuff fV
 02A0           ;              j -> R20
 02A0           ;              i -> R10
                        .even
 02A0           _time_to_dispbuff::
 02A0 0E940000          xcall push_xgset300C
 02A4                   .dbline -1
 02A4                   .dbline 99
 02A4           ; }
 02A4           ; 
 02A4           ; 
 02A4           ; void time_to_dispbuff(void)
 02A4           ; {
 02A4                   .dbline 100
 02A4           ;       unsigned char i = 0, j = 0;
 02A4                   .dbline 100
 02A4 4427              clr R20
 02A6                   .dbline 101
 02A6           ;       for (i = 0; i <= 2; i++)
 02A6 AA24              clr R10
 02A8 29C0              xjmp L63
 02AA           L60:
 02AA                   .dbline 102
 02AA           ;       {
 02AA                   .dbline 103
 02AA           ;               disp_buff[j++] = time[i] % 10;
 02AA 242E              mov R2,R20
 02AC 3324              clr R3
 02AE 4F5F              subi R20,255    ; addi 1
 02B0 80E0              ldi R24,<_time
 02B2 90E0              ldi R25,>_time
 02B4 EA2D              mov R30,R10
 02B6 FF27              clr R31
 02B8 E80F              add R30,R24
 02BA F91F              adc R31,R25
 02BC 0081              ldd R16,z+0
 02BE 1AE0              ldi R17,10
 02C0 0E940000          xcall mod8u
 02C4 80E0              ldi R24,<_disp_buff
 02C6 90E0              ldi R25,>_disp_buff
 02C8 E22D              mov R30,R2
 02CA FF27              clr R31
 02CC E80F              add R30,R24
 02CE F91F              adc R31,R25
 02D0 0083              std z+0,R16
 02D2                   .dbline 104
 02D2           ;               disp_buff[j++] = time[i] / 10;
 02D2 242E              mov R2,R20
 02D4 3324              clr R3
 02D6 4F5F              subi R20,255    ; addi 1
 02D8 80E0              ldi R24,<_time
 02DA 90E0              ldi R25,>_time
 02DC EA2D              mov R30,R10
 02DE FF27              clr R31
 02E0 E80F              add R30,R24
 02E2 F91F              adc R31,R25
 02E4 0081              ldd R16,z+0
 02E6 1AE0              ldi R17,10
 02E8 0E940000          xcall div8u
 02EC 80E0              ldi R24,<_disp_buff
 02EE 90E0              ldi R25,>_disp_buff
 02F0 E22D              mov R30,R2
 02F2 FF27              clr R31
 02F4 E80F              add R30,R24
 02F6 F91F              adc R31,R25
 02F8 0083              std z+0,R16
 02FA                   .dbline 105
 02FA           ;       }
 02FA           L61:
 02FA                   .dbline 101
 02FA A394              inc R10
 02FC           L63:
 02FC                   .dbline 101
 02FC 82E0              ldi R24,2
 02FE 8A15              cp R24,R10
 0300 A0F6              brsh L60
 0302           X21:
 0302                   .dbline -2
 0302           L59:
 0302                   .dbline 0 ; func end
 0302 0C940000          xjmp pop_xgset300C
 0306                   .dbsym r j 20 c
 0306                   .dbsym r i 10 c
 0306                   .dbend
 0306                   .dbfunc e setTime_to_dispbuff _setTime_to_dispbuff fV
 0306           ;              j -> R20
 0306           ;              i -> R10
                        .even
 0306           _setTime_to_dispbuff::
 0306 0E940000          xcall push_xgset300C
 030A                   .dbline -1
 030A                   .dbline 109
 030A           ; }
 030A           ; 
 030A           ; void setTime_to_dispbuff(void)
 030A           ; {
 030A                   .dbline 110
 030A           ;       unsigned char i = 0, j = 0;
 030A                   .dbline 110
 030A 4427              clr R20
 030C                   .dbline 111
 030C           ;       for (i = 0; i <= 2; i++)
 030C AA24              clr R10
 030E 29C0              xjmp L68
 0310           L65:
 0310                   .dbline 112
 0310           ;       {
 0310                   .dbline 113
 0310           ;               disp_buff[j++] = time_setter[i] % 10;
 0310 242E              mov R2,R20
 0312 3324              clr R3
 0314 4F5F              subi R20,255    ; addi 1
 0316 80E0              ldi R24,<_time_setter
 0318 90E0              ldi R25,>_time_setter
 031A EA2D              mov R30,R10
 031C FF27              clr R31
 031E E80F              add R30,R24
 0320 F91F              adc R31,R25
 0322 0081              ldd R16,z+0
 0324 1AE0              ldi R17,10
 0326 0E940000          xcall mod8u
 032A 80E0              ldi R24,<_disp_buff
 032C 90E0              ldi R25,>_disp_buff
 032E E22D              mov R30,R2
 0330 FF27              clr R31
 0332 E80F              add R30,R24
 0334 F91F              adc R31,R25
 0336 0083              std z+0,R16
 0338                   .dbline 114
 0338           ;               disp_buff[j++] = time_setter[i] / 10;
 0338 242E              mov R2,R20
 033A 3324              clr R3
 033C 4F5F              subi R20,255    ; addi 1
 033E 80E0              ldi R24,<_time_setter
 0340 90E0              ldi R25,>_time_setter
 0342 EA2D              mov R30,R10
 0344 FF27              clr R31
 0346 E80F              add R30,R24
 0348 F91F              adc R31,R25
 034A 0081              ldd R16,z+0
 034C 1AE0              ldi R17,10
 034E 0E940000          xcall div8u
 0352 80E0              ldi R24,<_disp_buff
 0354 90E0              ldi R25,>_disp_buff
 0356 E22D              mov R30,R2
 0358 FF27              clr R31
 035A E80F              add R30,R24
 035C F91F              adc R31,R25
 035E 0083              std z+0,R16
 0360                   .dbline 115
 0360           ;       }
 0360           L66:
 0360                   .dbline 111
 0360 A394              inc R10
 0362           L68:
 0362                   .dbline 111
 0362 82E0              ldi R24,2
 0364 8A15              cp R24,R10
 0366 A0F6              brsh L65
 0368           X22:
 0368                   .dbline -2
 0368           L64:
 0368                   .dbline 0 ; func end
 0368 0C940000          xjmp pop_xgset300C
 036C                   .dbsym r j 20 c
 036C                   .dbsym r i 10 c
 036C                   .dbend
 036C                   .dbfunc e Disp_time_1_digit _Disp_time_1_digit fV
 036C           ;         states -> R10
                        .even
 036C           _Disp_time_1_digit::
 036C AA92              st -y,R10
 036E A02E              mov R10,R16
 0370                   .dbline -1
 0370                   .dbline 119
 0370           ; }
 0370           ; 
 0370           ; void Disp_time_1_digit(unsigned char states)
 0370           ; {
 0370                   .dbline 120
 0370           ;       SEG_port |= 0x3f; // XX11 1111 HIGH OFF LOW ON 
 0370 85B3              in R24,0x15
 0372 8F63              ori R24,63
 0374 85BB              out 0x15,R24
 0376                   .dbline 121
 0376           ;       if (states == 0) return;
 0376 AA20              tst R10
 0378 09F4              brne L70
 037A           X23:
 037A                   .dbline 121
 037A 25C0              xjmp L69
 037C           L70:
 037C                   .dbline 122
 037C           ;       digit_port = SEG_A_List[disp_buff[pos]];
 037C 80E0              ldi R24,<_disp_buff
 037E 90E0              ldi R25,>_disp_buff
 0380 E0911200          lds R30,_pos
 0384 FF27              clr R31
 0386 E80F              add R30,R24
 0388 F91F              adc R31,R25
 038A E081              ldd R30,z+0
 038C FF27              clr R31
 038E 80E0              ldi R24,<_SEG_A_List
 0390 90E0              ldi R25,>_SEG_A_List
 0392 E80F              add R30,R24
 0394 F91F              adc R31,R25
 0396 2080              ldd R2,z+0
 0398 2BBA              out 0x1b,R2
 039A                   .dbline 123
 039A           ;       if (!DP_flag && (pos == 2 || pos == 4)) digit_port |= 0x80;
 039A 20901400          lds R2,_DP_flag
 039E 2220              tst R2
 03A0 41F4              brne L72
 03A2           X24:
 03A2 20901200          lds R2,_pos
 03A6 822D              mov R24,R2
 03A8 8230              cpi R24,2
 03AA 11F0              breq L74
 03AC           X25:
 03AC 8430              cpi R24,4
 03AE 09F4              brne L72
 03B0           X26:
 03B0           L74:
 03B0                   .dbline 123
 03B0 DF9A              sbi 0x1b,7
 03B2           L72:
 03B2                   .dbline 124
 03B2           ;       SEG_port &= ~(1 << pos); // open the SEG which subscript is 'pos'
 03B2 10911200          lds R17,_pos
 03B6 01E0              ldi R16,1
 03B8 0E940000          xcall lsl8
 03BC 202E              mov R2,R16
 03BE 2094              com R2
 03C0 35B2              in R3,0x15
 03C2 3220              and R3,R2
 03C4 35BA              out 0x15,R3
 03C6                   .dbline -2
 03C6           L69:
 03C6                   .dbline 0 ; func end
 03C6 A990              ld R10,y+
 03C8 0895              ret
 03CA                   .dbsym r states 10 c
 03CA                   .dbend
 03CA                   .dbfunc e Disp_realTime _Disp_realTime fV
                        .even
 03CA           _Disp_realTime::
 03CA                   .dbline -1
 03CA                   .dbline 129
 03CA           ; }
 03CA           ; 
 03CA           ; 
 03CA           ; void Disp_realTime(void)
 03CA           ; {
 03CA                   .dbline 130
 03CA           ;       time_to_dispbuff();
 03CA 6ADF              xcall _time_to_dispbuff
 03CC                   .dbline 131
 03CC           ;       Disp_time_1_digit(1);
 03CC 01E0              ldi R16,1
 03CE CEDF              xcall _Disp_time_1_digit
 03D0                   .dbline 132
 03D0           ;       if (++pos >= 6) pos = 0;
 03D0 80911200          lds R24,_pos
 03D4 8F5F              subi R24,255    ; addi 1
 03D6 282E              mov R2,R24
 03D8 20921200          sts _pos,R2
 03DC 8630              cpi R24,6
 03DE 18F0              brlo L76
 03E0           X27:
 03E0                   .dbline 132
 03E0 2224              clr R2
 03E2 20921200          sts _pos,R2
 03E6           L76:
 03E6                   .dbline -2
 03E6           L75:
 03E6                   .dbline 0 ; func end
 03E6 0895              ret
 03E8                   .dbend
 03E8                   .dbfunc e Disp_setTime _Disp_setTime fV
                        .even
 03E8           _Disp_setTime::
 03E8 4A93              st -y,R20
 03EA 5A93              st -y,R21
 03EC                   .dbline -1
 03EC                   .dbline 136
 03EC           ; }
 03EC           ; 
 03EC           ; void Disp_setTime(void)
 03EC           ; {
 03EC                   .dbline 137
 03EC           ;       setTime_to_dispbuff();
 03EC 8CDF              xcall _setTime_to_dispbuff
 03EE                   .dbline 138
 03EE           ;       if ((set_states == 0 && (pos == 0 || pos == 1))
 03EE 20901700          lds R2,_set_states
 03F2 2220              tst R2
 03F4 39F4              brne L82
 03F6           X28:
 03F6 20901200          lds R2,_pos
 03FA 2220              tst R2
 03FC C1F0              breq L85
 03FE           X29:
 03FE 822D              mov R24,R2
 0400 8130              cpi R24,1
 0402 A9F0              breq L85
 0404           X30:
 0404           L82:
 0404 80911700          lds R24,_set_states
 0408 8130              cpi R24,1
 040A 39F4              brne L84
 040C           X31:
 040C 20901200          lds R2,_pos
 0410 822D              mov R24,R2
 0412 8230              cpi R24,2
 0414 61F0              breq L85
 0416           X32:
 0416 8330              cpi R24,3
 0418 51F0              breq L85
 041A           X33:
 041A           L84:
 041A 80911700          lds R24,_set_states
 041E 8230              cpi R24,2
 0420 51F4              brne L79
 0422           X34:
 0422 40911200          lds R20,_pos
 0426 4430              cpi R20,4
 0428 11F0              breq L85
 042A           X35:
 042A 4530              cpi R20,5
 042C 21F4              brne L79
 042E           X36:
 042E           L85:
 042E                   .dbline 141
 042E           ;               || (set_states == 1 && (pos == 2 || pos == 3))
 042E           ;               || (set_states == 2 && (pos == 4 || pos == 5)))
 042E           ;               Disp_time_1_digit(set_flag);
 042E 00911500          lds R16,_set_flag
 0432 9CDF              xcall _Disp_time_1_digit
 0434 02C0              xjmp L80
 0436           L79:
 0436                   .dbline 143
 0436           ;       else
 0436           ;               Disp_time_1_digit(1);
 0436 01E0              ldi R16,1
 0438 99DF              xcall _Disp_time_1_digit
 043A           L80:
 043A                   .dbline 144
 043A           ;       if (++pos >= 6) pos = 0;
 043A 40911200          lds R20,_pos
 043E 4F5F              subi R20,255    ; addi 1
 0440 40931200          sts _pos,R20
 0444 4630              cpi R20,6
 0446 18F0              brlo L86
 0448           X37:
 0448                   .dbline 144
 0448 2224              clr R2
 044A 20921200          sts _pos,R2
 044E           L86:
 044E                   .dbline -2
 044E           L78:
 044E                   .dbline 0 ; func end
 044E 5991              ld R21,y+
 0450 4991              ld R20,y+
 0452 0895              ret
 0454                   .dbend
                        .area data(ram, con, rel)
 0018                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0018           _key_stime_counter::
 0018                   .blkb 1
                        .area idata
 0018 00                .byte 0
                        .area data(ram, con, rel)
 0019                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0019                   .dbfile C:\Users\IEUser\Documents\Clock\code\read_key.h
 0019                   .dbsym e key_stime_counter _key_stime_counter c
 0019           _key_stime_ok::
 0019                   .blkb 1
                        .area idata
 0019 00                .byte 0
                        .area data(ram, con, rel)
 001A                   .dbfile C:\Users\IEUser\Documents\Clock\code\read_key.h
 001A                   .dbsym e key_stime_ok _key_stime_ok c
 001A           L89:
 001A                   .blkb 1
                        .area idata
 001A 00                .byte 0
                        .area data(ram, con, rel)
 001B                   .dbfile C:\Users\IEUser\Documents\Clock\code\read_key.h
 001B                   .blkb 1
                        .area idata
 001B 00                .byte 0
                        .area data(ram, con, rel)
 001C                   .dbfile C:\Users\IEUser\Documents\Clock\code\read_key.h
 001C           L90:
 001C                   .blkb 1
                        .area idata
 001C 00                .byte 0
                        .area data(ram, con, rel)
 001D                   .dbfile C:\Users\IEUser\Documents\Clock\code\read_key.h
                        .area text(rom, con, rel)
 0454                   .dbfile C:\Users\IEUser\Documents\Clock\code\read_key.h
 0454                   .dbfunc e read_key_n _read_key_n fc
 0454                   .dbsym s key_time L90 c
 0454                   .dbsym s key_state L89 A[2:2]c
 0454           ;     key_return -> R20
 0454           ;              i -> R10
                        .even
 0454           _read_key_n::
 0454 0E940000          xcall push_xgsetF00C
 0458 A02E              mov R10,R16
 045A                   .dbline -1
 045A                   .dbline 16
 045A           ; #define key_is_pressed() (0==(PINC&(1<<i)))
 045A           ; #define key_state_0       0
 045A           ; #define key_state_1   1
 045A           ; #define key_state_2   2
 045A           ; #define key_state_3   3
 045A           ; 
 045A           ; unsigned char key_stime_counter = 0;
 045A           ; unsigned char key_stime_ok = 0;
 045A           ; 
 045A           ; /************************************
 045A           ; // return 0 means no action
 045A           ; // return 1 means one time press key
 045A           ; // return 2 means long press key
 045A           ; ************************************/
 045A           ; unsigned char read_key_n(unsigned char i)
 045A           ; {
 045A                   .dbline 18
 045A           ;       static unsigned char key_state[2] = {0}, key_time = 0;
 045A           ;       unsigned char key_return = 0;
 045A 4427              clr R20
 045C                   .dbline 19
 045C           ;       switch (key_state[i-6])
 045C 80E0              ldi R24,<L89-6
 045E 90E0              ldi R25,>L89-6
 0460 EA2D              mov R30,R10
 0462 FF27              clr R31
 0464 E80F              add R30,R24
 0466 F91F              adc R31,R25
 0468 6081              ldd R22,z+0
 046A 7727              clr R23
 046C 6030              cpi R22,0
 046E 6707              cpc R22,R23
 0470 79F0              breq L95
 0472           X38:
 0472 6130              cpi R22,1
 0474 E0E0              ldi R30,0
 0476 7E07              cpc R23,R30
 0478 E1F0              breq L99
 047A           X39:
 047A 6230              cpi R22,2
 047C E0E0              ldi R30,0
 047E 7E07              cpc R23,R30
 0480 09F4              brne X48
 0482 33C0              xjmp L104
 0484           X48:
 0484           X40:
 0484 6330              cpi R22,3
 0486 E0E0              ldi R30,0
 0488 7E07              cpc R23,R30
 048A 09F4              brne X49
 048C 54C0              xjmp L111
 048E           X49:
 048E           X41:
 048E 6FC0              xjmp L91
 0490           L95:
 0490                   .dbline 22
 0490           ;       {
 0490           ;       case key_state_0:
 0490           ;               if (key_is_pressed()) key_state[i-6] = key_state_1;
 0490 01E0              ldi R16,1
 0492 1A2D              mov R17,R10
 0494 0E940000          xcall lsl8
 0498 23B2              in R2,0x13
 049A 2022              and R2,R16
 049C 09F0              breq X50
 049E 67C0              xjmp L92
 04A0           X50:
 04A0           X42:
 04A0                   .dbline 22
 04A0 80E0              ldi R24,<L89-6
 04A2 90E0              ldi R25,>L89-6
 04A4 EA2D              mov R30,R10
 04A6 FF27              clr R31
 04A8 E80F              add R30,R24
 04AA F91F              adc R31,R25
 04AC 81E0              ldi R24,1
 04AE 8083              std z+0,R24
 04B0                   .dbline 23
 04B0           ;               break;
 04B0 5EC0              xjmp L92
 04B2           L99:
 04B2                   .dbline 26
 04B2           ; 
 04B2           ;       case key_state_1:
 04B2           ;               if (key_is_pressed())
 04B2 01E0              ldi R16,1
 04B4 1A2D              mov R17,R10
 04B6 0E940000          xcall lsl8
 04BA 23B2              in R2,0x13
 04BC 2022              and R2,R16
 04BE 61F4              brne L100
 04C0           X43:
 04C0                   .dbline 27
 04C0           ;               {
 04C0                   .dbline 28
 04C0           ;                       key_state[i-6] = key_state_2;
 04C0 80E0              ldi R24,<L89-6
 04C2 90E0              ldi R25,>L89-6
 04C4 EA2D              mov R30,R10
 04C6 FF27              clr R31
 04C8 E80F              add R30,R24
 04CA F91F              adc R31,R25
 04CC 82E0              ldi R24,2
 04CE 8083              std z+0,R24
 04D0                   .dbline 29
 04D0           ;                       key_time = 0;
 04D0 2224              clr R2
 04D2 20921C00          sts L90,R2
 04D6                   .dbline 30
 04D6           ;               }
 04D6 4BC0              xjmp L92
 04D8           L100:
 04D8                   .dbline 31
 04D8           ;               else key_state[i-6] = key_state_0;
 04D8 80E0              ldi R24,<L89-6
 04DA 90E0              ldi R25,>L89-6
 04DC EA2D              mov R30,R10
 04DE FF27              clr R31
 04E0 E80F              add R30,R24
 04E2 F91F              adc R31,R25
 04E4 2224              clr R2
 04E6 2082              std z+0,R2
 04E8                   .dbline 32
 04E8           ;               break;
 04E8 42C0              xjmp L92
 04EA           L104:
 04EA                   .dbline 35
 04EA           ; 
 04EA           ;       case key_state_2:
 04EA           ;               if (!key_is_pressed())
 04EA 01E0              ldi R16,1
 04EC 1A2D              mov R17,R10
 04EE 0E940000          xcall lsl8
 04F2 23B2              in R2,0x13
 04F4 2022              and R2,R16
 04F6 51F0              breq L105
 04F8           X44:
 04F8                   .dbline 36
 04F8           ;               {
 04F8                   .dbline 37
 04F8           ;                       key_state[i-6] = key_state_0;
 04F8 80E0              ldi R24,<L89-6
 04FA 90E0              ldi R25,>L89-6
 04FC EA2D              mov R30,R10
 04FE FF27              clr R31
 0500 E80F              add R30,R24
 0502 F91F              adc R31,R25
 0504 2224              clr R2
 0506 2082              std z+0,R2
 0508                   .dbline 38
 0508           ;                       key_return = 1;
 0508 41E0              ldi R20,1
 050A                   .dbline 39
 050A           ;               }
 050A 31C0              xjmp L92
 050C           L105:
 050C                   .dbline 40
 050C           ;               else if (++key_time >= 100)
 050C 80911C00          lds R24,L90
 0510 8F5F              subi R24,255    ; addi 1
 0512 282E              mov R2,R24
 0514 20921C00          sts L90,R2
 0518 8436              cpi R24,100
 051A 48F1              brlo L92
 051C           X45:
 051C                   .dbline 41
 051C           ;               {
 051C                   .dbline 42
 051C           ;                       key_state[i-6] = key_state_3;
 051C 80E0              ldi R24,<L89-6
 051E 90E0              ldi R25,>L89-6
 0520 EA2D              mov R30,R10
 0522 FF27              clr R31
 0524 E80F              add R30,R24
 0526 F91F              adc R31,R25
 0528 83E0              ldi R24,3
 052A 8083              std z+0,R24
 052C                   .dbline 43
 052C           ;                       key_time = 0;
 052C 2224              clr R2
 052E 20921C00          sts L90,R2
 0532                   .dbline 44
 0532           ;                       key_return = 2;
 0532 42E0              ldi R20,2
 0534                   .dbline 45
 0534           ;               }
 0534                   .dbline 46
 0534           ;               break;
 0534 1CC0              xjmp L92
 0536           L111:
 0536                   .dbline 49
 0536           ; 
 0536           ;       case key_state_3:
 0536           ;               if (!key_is_pressed()) key_state[i-6] = key_state_0;
 0536 01E0              ldi R16,1
 0538 1A2D              mov R17,R10
 053A 0E940000          xcall lsl8
 053E 23B2              in R2,0x13
 0540 2022              and R2,R16
 0542 49F0              breq L112
 0544           X46:
 0544                   .dbline 49
 0544 80E0              ldi R24,<L89-6
 0546 90E0              ldi R25,>L89-6
 0548 EA2D              mov R30,R10
 054A FF27              clr R31
 054C E80F              add R30,R24
 054E F91F              adc R31,R25
 0550 2224              clr R2
 0552 2082              std z+0,R2
 0554 0CC0              xjmp L92
 0556           L112:
 0556                   .dbline 51
 0556           ;               else
 0556           ;               {
 0556                   .dbline 52
 0556           ;                       if (++key_time >= 50)
 0556 80911C00          lds R24,L90
 055A 8F5F              subi R24,255    ; addi 1
 055C 282E              mov R2,R24
 055E 20921C00          sts L90,R2
 0562 8233              cpi R24,50
 0564 20F0              brlo L92
 0566           X47:
 0566                   .dbline 53
 0566           ;                       {
 0566                   .dbline 54
 0566           ;                               key_time = 0;
 0566 2224              clr R2
 0568 20921C00          sts L90,R2
 056C                   .dbline 55
 056C           ;                               key_return = 2;
 056C 42E0              ldi R20,2
 056E                   .dbline 56
 056E           ;                       }
 056E                   .dbline 57
 056E           ;               }
 056E                   .dbline 58
 056E           ;               break;
 056E           L91:
 056E           L92:
 056E                   .dbline 60
 056E           ;       }
 056E           ;       return key_return;
 056E 042F              mov R16,R20
 0570                   .dbline -2
 0570           L88:
 0570                   .dbline 0 ; func end
 0570 0C940000          xjmp pop_xgsetF00C
 0574                   .dbsym r key_return 20 c
 0574                   .dbsym r i 10 c
 0574                   .dbend
                        .area vector(rom, abs)
                        .org 36
 0024 0C94BA02          jmp _timer0_ovf_isr
                        .area text(rom, con, rel)
 0574                   .dbfile C:\Users\IEUser\Documents\Clock\code\read_key.h
 0574                   .dbfile C:\Users\IEUser\Documents\Clock\code\main.c
 0574                   .dbfunc e timer0_ovf_isr _timer0_ovf_isr fV
                        .even
 0574           _timer0_ovf_isr::
 0574 0A92              st -y,R0
 0576 1A92              st -y,R1
 0578 2A92              st -y,R2
 057A 3A92              st -y,R3
 057C 4A92              st -y,R4
 057E 5A92              st -y,R5
 0580 6A92              st -y,R6
 0582 7A92              st -y,R7
 0584 8A92              st -y,R8
 0586 9A92              st -y,R9
 0588 0A93              st -y,R16
 058A 1A93              st -y,R17
 058C 2A93              st -y,R18
 058E 3A93              st -y,R19
 0590 8A93              st -y,R24
 0592 9A93              st -y,R25
 0594 AA93              st -y,R26
 0596 BA93              st -y,R27
 0598 EA93              st -y,R30
 059A FA93              st -y,R31
 059C 0FB6              IN R0,63
 059E 0A92              st -y,R0
 05A0                   .dbline -1
 05A0                   .dbline 7
 05A0           ; #include "init_devices.h"
 05A0           ; #include "clock.h"
 05A0           ; #include "read_key.h"
 05A0           ; 
 05A0           ; #pragma interrupt_handler timer0_ovf_isr:iv_TIM0_OVF
 05A0           ; void timer0_ovf_isr(void)
 05A0           ; {
 05A0                   .dbline 8
 05A0           ;       TCNT0 = 0x83; //reload counter value
 05A0 83E8              ldi R24,131
 05A2 82BF              out 0x32,R24
 05A4                   .dbline 10
 05A4           ; 
 05A4           ;       run_time();
 05A4 4EDD              xcall _run_time
 05A6                   .dbline 12
 05A6           ; 
 05A6           ;       if (++key_stime_counter >= 10)
 05A6 80911800          lds R24,_key_stime_counter
 05AA 8F5F              subi R24,255    ; addi 1
 05AC 282E              mov R2,R24
 05AE 20921800          sts _key_stime_counter,R2
 05B2 8A30              cpi R24,10
 05B4 30F0              brlo L118
 05B6           X51:
 05B6                   .dbline 13
 05B6           ;       {
 05B6                   .dbline 14
 05B6           ;               key_stime_counter = 0;
 05B6 2224              clr R2
 05B8 20921800          sts _key_stime_counter,R2
 05BC                   .dbline 15
 05BC           ;               key_stime_ok = 1;
 05BC 81E0              ldi R24,1
 05BE 80931900          sts _key_stime_ok,R24
 05C2                   .dbline 16
 05C2           ;       }
 05C2           L118:
 05C2                   .dbline -2
 05C2           L117:
 05C2                   .dbline 0 ; func end
 05C2 0990              ld R0,y+
 05C4 0FBE              OUT 63,R0
 05C6 F991              ld R31,y+
 05C8 E991              ld R30,y+
 05CA B991              ld R27,y+
 05CC A991              ld R26,y+
 05CE 9991              ld R25,y+
 05D0 8991              ld R24,y+
 05D2 3991              ld R19,y+
 05D4 2991              ld R18,y+
 05D6 1991              ld R17,y+
 05D8 0991              ld R16,y+
 05DA 9990              ld R9,y+
 05DC 8990              ld R8,y+
 05DE 7990              ld R7,y+
 05E0 6990              ld R6,y+
 05E2 5990              ld R5,y+
 05E4 4990              ld R4,y+
 05E6 3990              ld R3,y+
 05E8 2990              ld R2,y+
 05EA 1990              ld R1,y+
 05EC 0990              ld R0,y+
 05EE 1895              reti
 05F0                   .dbend
                        .area data(ram, con, rel)
 001D                   .dbfile C:\Users\IEUser\Documents\Clock\code\main.c
 001D           L121:
 001D                   .blkb 1
                        .area idata
 001D 00                .byte 0
                        .area data(ram, con, rel)
 001E                   .dbfile C:\Users\IEUser\Documents\Clock\code\main.c
 001E           L122:
 001E                   .blkb 2
                        .area idata
 001E 0000              .word 0
                        .area data(ram, con, rel)
 0020                   .dbfile C:\Users\IEUser\Documents\Clock\code\main.c
                        .area text(rom, con, rel)
 05F0                   .dbfile C:\Users\IEUser\Documents\Clock\code\main.c
 05F0                   .dbfunc e main _main fV
 05F0                   .dbsym s no_action_time L122 i
 05F0                   .dbsym s key1_holdTime L121 c
                        .even
 05F0           _main::
 05F0                   .dbline -1
 05F0                   .dbline 21
 05F0           ; 
 05F0           ; }
 05F0           ; 
 05F0           ; void main(void)
 05F0           ; {
 05F0                   .dbline 24
 05F0           ;       static unsigned char key1_holdTime = 0;
 05F0           ;       static unsigned int no_action_time = 0;
 05F0           ;       init_devices();
 05F0 1EDD              xcall _init_devices
 05F2 92C0              xjmp L124
 05F4           L123:
 05F4                   .dbline 27
 05F4           ;       //insert your functional code here...
 05F4           ;       while (1)
 05F4           ;       {
 05F4                   .dbline 29
 05F4           ; 
 05F4           ;               switch (keys_states)
 05F4 40911600          lds R20,_keys_states
 05F8 5527              clr R21
 05FA 4030              cpi R20,0
 05FC 4507              cpc R20,R21
 05FE 29F0              breq L129
 0600           X52:
 0600 4130              cpi R20,1
 0602 E0E0              ldi R30,0
 0604 5E07              cpc R21,R30
 0606 19F0              breq L130
 0608           X53:
 0608 03C0              xjmp L127
 060A           L129:
 060A                   .dbline 31
 060A           ;               {
 060A           ;               case normal_mode :Disp_realTime(); break;
 060A DFDE              xcall _Disp_realTime
 060C                   .dbline 31
 060C 01C0              xjmp L127
 060E           L130:
 060E                   .dbline 32
 060E           ;               case set_mode :Disp_setTime(); break;
 060E ECDE              xcall _Disp_setTime
 0610                   .dbline 32
 0610                   .dbline 33
 0610           ;               default:break;
 0610           L127:
 0610                   .dbline 36
 0610           ;               }
 0610           ; 
 0610           ;               if (key_stime_ok)// 10ms watch key one time 
 0610 20901900          lds R2,_key_stime_ok
 0614 2220              tst R2
 0616 09F4              brne X67
 0618 7FC0              xjmp L131
 061A           X67:
 061A           X54:
 061A                   .dbline 37
 061A           ;               {
 061A                   .dbline 38
 061A           ;                       key_stime_ok = 0;
 061A 2224              clr R2
 061C 20921900          sts _key_stime_ok,R2
 0620                   .dbline 40
 0620           ; 
 0620           ;                       switch (read_key_n(7))
 0620 07E0              ldi R16,7
 0622 18DF              xcall _read_key_n
 0624 402F              mov R20,R16
 0626 5527              clr R21
 0628 4030              cpi R20,0
 062A 4507              cpc R20,R21
 062C 49F0              breq L136
 062E           X55:
 062E 4130              cpi R20,1
 0630 E0E0              ldi R30,0
 0632 5E07              cpc R21,R30
 0634 F9F0              breq L139
 0636           X56:
 0636 4230              cpi R20,2
 0638 E0E0              ldi R30,0
 063A 5E07              cpc R21,R30
 063C 39F1              breq L142
 063E           X57:
 063E 4BC0              xjmp L133
 0640           L136:
 0640                   .dbline 43
 0640           ;                       {
 0640           ;                       case 0:
 0640           ;                                if(++no_action_time>=1000) no_action_time=keys_states = set_states = 0;
 0640 80911E00          lds R24,L122
 0644 90911F00          lds R25,L122+1
 0648 0196              adiw R24,1
 064A 1C01              movw R2,R24
 064C 30921F00          sts L122+1,R3
 0650 20921E00          sts L122,R2
 0654 883E              cpi R24,232
 0656 E3E0              ldi R30,3
 0658 9E07              cpc R25,R30
 065A 08F4              brsh X68
 065C 3CC0              xjmp L134
 065E           X68:
 065E           X58:
 065E                   .dbline 43
 065E 2224              clr R2
 0660 20921700          sts _set_states,R2
 0664 20921600          sts _keys_states,R2
 0668 3324              clr R3
 066A 30921F00          sts L122+1,R3
 066E 20921E00          sts L122,R2
 0672                   .dbline 44
 0672           ;                                break;
 0672 31C0              xjmp L134
 0674           L139:
 0674                   .dbline 46
 0674           ;                       case 1:
 0674           ;                                no_action_time=0;
 0674 2224              clr R2
 0676 3324              clr R3
 0678 30921F00          sts L122+1,R3
 067C 20921E00          sts L122,R2
 0680                   .dbline 47
 0680           ;                                if(keys_states==1)
 0680 80911600          lds R24,_keys_states
 0684 8130              cpi R24,1
 0686 39F5              brne L134
 0688           X59:
 0688                   .dbline 48
 0688           ;                                       Add_time();
 0688 35DD              xcall _Add_time
 068A                   .dbline 50
 068A           ;                               
 068A           ;                               break;
 068A 25C0              xjmp L134
 068C           L142:
 068C                   .dbline 52
 068C           ;                       case 2:
 068C           ;                                no_action_time=0;
 068C 2224              clr R2
 068E 3324              clr R3
 0690 30921F00          sts L122+1,R3
 0694 20921E00          sts L122,R2
 0698                   .dbline 53
 0698           ;                                if (++key1_holdTime >= 2) {
 0698 40911D00          lds R20,L121
 069C 4F5F              subi R20,255    ; addi 1
 069E 40931D00          sts L121,R20
 06A2 4230              cpi R20,2
 06A4 C0F0              brlo L134
 06A6           X60:
 06A6                   .dbline 53
 06A6                   .dbline 54
 06A6           ;                                       key1_holdTime = 0;
 06A6 20921D00          sts L121,R2
 06AA                   .dbline 55
 06AA           ;                                       if (keys_states == normal_mode )
 06AA 20901600          lds R2,_keys_states
 06AE 2220              tst R2
 06B0 29F4              brne L145
 06B2           X61:
 06B2                   .dbline 56
 06B2           ;                                       {
 06B2                   .dbline 57
 06B2           ;                                               keys_states = set_mode ;
 06B2 81E0              ldi R24,1
 06B4 80931600          sts _keys_states,R24
 06B8                   .dbline 58
 06B8           ;                                               Get_time();
 06B8 10DD              xcall _Get_time
 06BA                   .dbline 59
 06BA           ;                                       }
 06BA 0DC0              xjmp L134
 06BC           L145:
 06BC                   .dbline 60
 06BC           ;                                       else if (++set_states >= 3)
 06BC 40911700          lds R20,_set_states
 06C0 4F5F              subi R20,255    ; addi 1
 06C2 40931700          sts _set_states,R20
 06C6 4330              cpi R20,3
 06C8 30F0              brlo L134
 06CA           X62:
 06CA                   .dbline 61
 06CA           ;                                       {
 06CA                   .dbline 62
 06CA           ;                                               keys_states = set_states = normal_mode ;
 06CA 2224              clr R2
 06CC 20921700          sts _set_states,R2
 06D0 20921600          sts _keys_states,R2
 06D4                   .dbline 63
 06D4           ;                                               Set_time();
 06D4 D8DD              xcall _Set_time
 06D6                   .dbline 64
 06D6           ;                                       }
 06D6                   .dbline 65
 06D6           ;                                }
 06D6                   .dbline 66
 06D6           ;                                break;
 06D6           L133:
 06D6           L134:
 06D6                   .dbline 68
 06D6           ;                       }
 06D6           ;                       if(keys_states== set_mode )
 06D6 80911600          lds R24,_keys_states
 06DA 8130              cpi R24,1
 06DC E9F4              brne L149
 06DE           X63:
 06DE                   .dbline 69
 06DE           ;                       {
 06DE                   .dbline 70
 06DE           ;                       switch (read_key_n(6))
 06DE 06E0              ldi R16,6
 06E0 B9DE              xcall _read_key_n
 06E2 A02E              mov R10,R16
 06E4 4A2D              mov R20,R10
 06E6 5527              clr R21
 06E8 4130              cpi R20,1
 06EA E0E0              ldi R30,0
 06EC 5E07              cpc R21,R30
 06EE 29F0              breq L154
 06F0           X64:
 06F0 4230              cpi R20,2
 06F2 E0E0              ldi R30,0
 06F4 5E07              cpc R21,R30
 06F6 49F0              breq L155
 06F8           X65:
 06F8 0FC0              xjmp L151
 06FA           L154:
 06FA                   .dbline 73
 06FA           ;                       {
 06FA           ;                       case 1:
 06FA           ;                                no_action_time=0;
 06FA 2224              clr R2
 06FC 3324              clr R3
 06FE 30921F00          sts L122+1,R3
 0702 20921E00          sts L122,R2
 0706                   .dbline 74
 0706           ;                                Sub_time();break;
 0706 31DD              xcall _Sub_time
 0708                   .dbline 74
 0708 07C0              xjmp L152
 070A           L155:
 070A                   .dbline 76
 070A           ;                       case 2:
 070A           ;                                no_action_time=0;
 070A 2224              clr R2
 070C 3324              clr R3
 070E 30921F00          sts L122+1,R3
 0712 20921E00          sts L122,R2
 0716                   .dbline 77
 0716           ;                                quick_Sub_time();break;
 0716 65DD              xcall _quick_Sub_time
 0718                   .dbline 77
 0718           L151:
 0718           L152:
 0718                   .dbline 79
 0718           ;                       }
 0718           ;                       }
 0718           L149:
 0718                   .dbline 80
 0718           ;               }
 0718           L131:
 0718                   .dbline 81
 0718           ;       }
 0718           L124:
 0718                   .dbline 26
 0718 6DCF              xjmp L123
 071A           X66:
 071A                   .dbline -2
 071A           L120:
 071A                   .dbline 0 ; func end
 071A 0895              ret
 071C                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile C:\Users\IEUser\Documents\Clock\code\main.c
 0000           _disp_buff::
 0000                   .blkb 6
 0006                   .dbfile C:\Users\IEUser\Documents\Clock\code\clock.h
 0006                   .dbsym e disp_buff _disp_buff A[6:6]c
 0006           _time_setter::
 0006                   .blkb 3
 0009                   .dbsym e time_setter _time_setter A[3:3]c
 0009           _time::
 0009                   .blkb 3
 000C                   .dbsym e time _time A[3:3]c
 000C           ;       return;
 000C           ; }
